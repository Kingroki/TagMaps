variables:
  GIT_SUBMODULE_STRATEGY: recursive

test:
  image: continuumio/miniconda3:4.6.14
  before_script:
      - conda config --add channels conda-forge
      - conda env create -f environment_ci.yml
      - source activate tagmaps
  stage: test
  script:
    # test dev install
    - pip install -e . --no-dependencies
    # run main test
    - cleaned_data_file=resources/01_Input/flickr_dresden_cc-by-licenses.csv
    - python tests/test_all.py --max_items 50 --auto_mode --load_intermediate=$cleaned_data_file
    # argparse to markdown conversion for mkdocs
    # install argdown from submodule
    - cd docs/argparse/argdown/
    - pip install -e .
    - cd ../../../
    - python docs/argparse/argparse_doc.py
    - argdown parse_args.py > docs/argparse/args.md
    # install pdoc3 for api ref
    - pip install pdoc3
    - pdoc --html --output-dir docs/api/ tagmaps
    # create badges
    - pylint --output-format=text tagmaps | tee pylint.txt || pylint-exit $?
    - score=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt)
    - echo "Pylint score was $score"
    - anybadge -l pylint --value=$score --file=pylint.svg 2=red 4=orange 9=yellow 10=green
    - anybadge -l pipeline --value=passing --file=pipeline.svg passing=green failing=red
    - pypi_version=$(pip search tagmaps | cut -d "(" -f2 | cut -d ")" -f1 | sed -r "s/[latest]+//g")
    - echo "Pypi version was $pypi_version"
    - conda_version=$(conda search tagmaps -c conda-forge | tail -1 | awk  '{print $2}')
    - echo "Conda version was $conda_version"
    - anybadge -l pypi --value="$pypi_version" --file=pypi.svg --color=green
    - anybadge -l conda-forge --value="$conda_version" --file=conda-forge.svg --color=orange
    - anybadge -l mkdocs --value="Documentation" --file=documentation.svg --color=green
  artifacts:
    paths:
      - pylint.svg
      - pypi.svg
      - pipeline.svg
      - conda-forge.svg
      - documentation.svg
      - docs/argparse/args.md
      - docs/api/
  only:
  - master, ci-test

pages:
  stage: deploy
  image: python:alpine
  before_script:
      - pip install mkdocs
      # Add your custom theme if not inside a theme_dir
      # (https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes)
  script:
    - mkdir .public
    - cp resources/img6.png .public
    - cp resources/tagmaps_steps.png .public
    - cp pylint.svg .public
    - cp pipeline.svg .public
    - cp pypi.svg .public
    - cp conda-forge.svg .public
    - cp documentation.svg .public
    - mv .public public
    # build docs
    - mkdocs build
    - mv site public
    # copy pdoc3 compiled API ref
    - mv docs/api/tagmaps/* public/site/api/
    - mv public/site public/docs
  artifacts:
    name: pages
    paths:
    - public
  only:
  - master, ci-test

